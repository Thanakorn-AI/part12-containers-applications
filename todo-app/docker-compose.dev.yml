services:
  app:
    image: todo-frontend-dev
    build:
      context: ./todo-frontend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-frontend/:/usr/src/app
    environment:
      - VITE_BACKEND_URL=/api
    container_name: todo-frontend-dev
    depends_on:
      - server
    # Adding a healthcheck for the frontend
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  server:
    image: todo-backend-dev
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    volumes:
      - ./todo-backend/:/usr/src/app
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
      - DEBUG=todo-backend:*  # Enable debug logging
    container_name: todo-backend-dev
    depends_on:
      - mongo
      - redis
    # Adding a healthcheck for the backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/todos"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: on-failure

  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./todo-backend/mongo_data:/data/db
    container_name: mongo-dev
    # Adding a healthcheck for MongoDB
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: on-failure

  redis:
    image: redis
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - ./todo-backend/redis_data:/data
    container_name: redis-dev
    # Adding a healthcheck for Redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: on-failure

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app
      - server
    restart: on-failure
    # Adding a healthcheck for Nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3